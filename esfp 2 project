#include <iostream>
#include <stdio.h>
#include <math.h>
#include <string.h>
using namespace std;

class CO
{
public:
    int NUM, a, b, i, n, c, x, y, z, result, out;
    int c_num, c0_num;

    void first()
    {
       
        cout << "Converter\n";
      
    first:

        cout << " 1 for decimal to binary \n 2 for binary to decimal \n 3 for binary to octal \n 4 for binary to hexa \n 5 for decimal to octal \n 6 for decimal to hexadecimal \n 7 for octal to binary \n 8 for octal to decimal \n 9 for octal to hexadecimal \n 10 for hexadecimal to binary \n 11 for hexadecimal to octal \n 12 for hexadecimal to decimal\n 0 For Exit. " << endl;
        cout << "Enter Any Number: ";
        cin >> NUM;
        switch (NUM)
        {
        case 1:
        {
            int a[10], n, i;
            cout << "Enter the number to convert: ";
            cin >> n;
            for (i = 0; n > 0; i++)
            {
                a[i] = n % 2;
                n = n / 2;
            }
            cout << "Binary of the given number= ";
            c_num = 0;
            c0_num = 0;
            for (i = i - 1; i >= 0; i--)
            {
                cout << a[i];
                int abcd = a[i];
                //c_no(abcd);
            }

            cout << "\n No. of 1's :" << c_num;
            cout << "\n No. of 0's :" << c0_num;
        }
        break;

        case 2:
        {
            long int i, no;

            int x, y = 0;

            cout << "Enter any binary number: ";

            cin >> no;

            cout << "\nThe decimal conversion of " << no << " is ";

            for (i = 0; no != 0; i++)

            {

                x = no % 10;

                y = (x) * (pow(2, i)) + y;

                no = no / 10;
            }

            cout << y;
        }
        break;
        case 3:
        {
            int octalNumber = 0, decimalNumber = 0, i = 0, binaryNumber;
            cout << "Enter any binary number: ";
            cin >> binaryNumber;
            while (binaryNumber != 0)
            {
                decimalNumber += (binaryNumber % 10) * pow(2, i);
                ++i;
                binaryNumber /= 10;
            }

            i = 1;

            while (decimalNumber != 0)
            {
                octalNumber += (decimalNumber % 8) * i;
                decimalNumber /= 8;
                i *= 10;
            }
            cout << "\nThe octal conversion is ";
            cout << octalNumber;
        }
        break;
        case 4:
        {
            int i, temp = 0, hexa[20], rem, num;
            cout << "Enter the number in binary ";
            cin >> num;
            cout << "Hexadecimal eqivalent ";
            for (i = 0; num > 0; i++)
            {
                for (int y = 0; y < 4; y++)
                {
                    rem = num % 10;
                    num /= 10;
                    temp += rem * pow(2, y);
                }
                hexa[i] = temp;
                temp = 0;
            }
            while (i > 0)
            {
                i--;
                if (hexa[i] > 9)
                    cout << char(55 + hexa[i]);
                else
                    cout << hexa[i];
            }
        }
        break;
        case 5:
        {
            int octalNum = 0, placeValue = 1;
            int decimalNum;
            cin >> decimalNum;
            while (decimalNum != 0)
            {
                octalNum += (decimalNum % 8) * placeValue;
                decimalNum /= 8;
                placeValue *= 10;
            }
            cout << "Octal form is " << octalNum;
        }
        break;
        case 6:
        {
            char arr[100];
            int i = 0, num;
            cout << "Enter the number in decimal ";
            cin >> num;
            while (num != 0)
            {
                int temp = 0;
                temp = num % 16;
                if (temp < 10)
                {
                    arr[i] = temp + 48;
                    i++;
                }
                else
                {
                    arr[i] = temp + 55;
                    i++;
                }
                num = num / 16;
            }
            cout << "Hexadecimal eqivalent:- ";
            for (int j = i - 1; j >= 0; j--)
                cout << arr[j];
        }
        break;
        case 7:
        {
            int decimalNum = 0, binaryNum = 0, count = 0, octalNum;
            cout << "Enter the number in octal ";
            cin >> octalNum;
            while (octalNum != 0)
            {
                decimalNum += (octalNum % 10) * pow(8, count);
                ++count;
                octalNum /= 10;
            }
            count = 1;
            while (decimalNum != 0)
            {
                binaryNum += (decimalNum % 2) * count;
                decimalNum /= 2;
                count *= 10;
            }
            cout << "Binary conversion is " << binaryNum;
        }
        break;
        case 8:
        {
            int decimalNum = 0, power = 0;
            int octalNum;
            cout << "Enter the number in octal ";
            cin >> octalNum;
            while (octalNum != 0)
            {
                decimalNum += (octalNum % 10) * pow(8, power);
                ++power;
                octalNum /= 10;
            }
            cout << "The decimal conversion is " << decimalNum;
        }
        break;

        case 9:
        {
            string hexa;
            long int i = 0;
            cout << "Enter the number in hexadecimal ";
            cin >> hexa;
            while (hexa[i])
            {
                switch (hexa[i])
                {
                case '0':
                    cout << "0000";
                    break;
                case '1':
                    cout << "0001";
                    break;
                case '2':
                    cout << "0010";
                    break;
                case '3':
                    cout << "0011";
                    break;
                case '4':
                    cout << "0100";
                    break;
                case '5':
                    cout << "0101";
                    break;
                case '6':
                    cout << "0110";
                    break;
                case '7':
                    cout << "0111";
                    break;
                case '8':
                    cout << "1000";
                    break;
                case '9':
                    cout << "1001";
                    break;
                case 'A':
                case 'a':
                    cout << "1010";
                    break;
                case 'B':
                case 'b':
                    cout << "1011";
                    break;
                case 'C':
                case 'c':
                    cout << "1100";
                    break;
                case 'D':
                case 'd':
                    cout << "1101";
                    break;
                case 'E':
                case 'e':
                    cout << "1110";
                    break;
                case 'F':
                case 'f':
                    cout << "1111";
                    break;
                default:
                    cout << "\n please enter valid hexadecimal digit " << hexa[i];
                }
                i++;
            }
            cout << "The binary conversion is " << hexa[i];
        }
        break;
        case 10:
        {
            char num[50];
            cout << "Enter the number in hexadecimal ";
            cin >> num;
            int len = strlen(num);
            int base = 1;
            int temp = 0;
            for (int i = len - 1; i >= 0; i--)
            {
                if (num[i] >= '0' && num[i] <= '9')
                {
                    temp += (num[i] - 48) * base;
                    base = base * 16;
                }
                else if (num[i] >= 'A' && num[i] <= 'F')
                {
                    temp += (num[i] - 55) * base;
                    base = base * 16;
                }
            }
            cout << "The decimal conversion is " << temp;
        }
        break;
        case 11:
        {
            int decimalNum = 0, octalNum[30], rem, i = 0, len = 0;
            char hexDecNum[10];
            cout << "Enter the Hexadecimal Number: ";
            cin >> hexDecNum;
            while (hexDecNum[i] != '\0')
            {
                len++;
                i++;
            }
            len--;
            i = 0;
            while (len >= 0)
            {
                rem = hexDecNum[len];
                if (rem >= 48 && rem <= 57)
                    rem = rem - 48;
                else if (rem >= 65 && rem <= 70)
                    rem = rem - 55;
                else if (rem >= 97 && rem <= 102)
                    rem = rem - 87;
                else
                {
                    cout << "\nInvalid Hex Digit!";
                    cout << endl;
                }
                decimalNum = decimalNum + (rem * pow(16, i));
                len--;
                i++;
            }
            i = 0;
            while (decimalNum != 0)
            {
                octalNum[i] = decimalNum % 8;
                i++;
                decimalNum = decimalNum / 8;
            }
            cout << "\nEquivalent Octal Value: ";
            for (i = (i - 1); i >= 0; i--)
                cout << octalNum[i];
            cout << endl;
        }
        break;
        }
        if (NUM != 0)
        {
            cout << "\n\n";
            goto first;
            cout << "\n\n";
        }
    }

    void third()
    {
       
        cout << "INFORMATION ABOUT GATES\n";
       
    third:
        cout << "\n\t\tTruth Table\n\n";
        cout << "Write Any Number According To Gate" << endl;
        cout << "Enter 1 For AND" << endl;
        cout << "Enter 2 For OR" << endl;
        cout << "Enter 3 For B NOT" << endl;
        cout << "Enter 4 For XOR" << endl;
        cout << "Enter 5 For XNOR" << endl;
        cout << "Enter 6 For NOR" << endl;
        cout << "Enter 7 For NAND" << endl;
        cout << "Enter 0 For Exit" << endl;
        cout << "Enter Number: ";
        cin >> n;

        switch (n)
        {
        case 1:
            cout << "A\tB\tAND\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;

                cout << a << "\t" << b << "\t" << (a && b) << endl;
            }
            break;

        case 2:
            cout << "A\tB\tOR\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;

                cout << a << "\t" << b << "\t" << (a || b) << endl;
            }
            break;

        case 3:
            cout << "A\tB\tNOT\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;

                cout << a << "\t" << b << "\t" << !b << endl;
            }
            break;

        case 4:
            cout << "A\tB\tXOR\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;

                cout << a << "\t" << b << "\t" << ((a && !b) + (!a && b)) << endl;
            }
            break;

        case 5:
            cout << "A\tB\tXNOR\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;
                cout << a << "\t" << b << "\t" << ((!a && !b) + (a && b)) << endl;
            }
            break;

        case 6:
            cout << "A\tB\tNAND\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;
                cout << a << "\t" << b << "\t" << !(a && b) << endl;
            }
            break;

        case 7:
            cout << "A\tB\tNOR\n";
            for (i = 0; i <= 3; i++)
            {
                a = i / 2;
                b = i % 2;
                cout << a << "\t" << b << "\t" << !(a || b) << endl;
            }
            break;
        }
        if (n != 0)
        {
            goto third;
        }
    }
};

int main()
{
    char ch;
    int c;
    CO obj;
    obj.first();
    obj.third();
    
   
    return 0;
}
